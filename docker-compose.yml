version: '3.6'

services:

  #db:
  #  image: postgres:9.6
  #  restart: always
  #  volumes:
  # - /Users/svfat/docker_volumes/var/lib/postgresql/data:/var/lib/postgresql/data
  #  environment:
  #    POSTGRES_USER: docker
  #    POSTGRES_PASSWORD: docker
  #    POSTGRES_DB: docker
  #  ports:
  #    - 5432:5432

  alembic:
    build: ./application/db_repo
    tty: true
    volumes:
      - ./application/db_repo:/db
    environment:
      - PGHOST=db
      - PGDATABASE=m3
      - PGUSER=postgres
      - PGPASSWORD=password

  db:
    image: postgres:9.6
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=password



  redis:
    image: redis
    ports:
      - 6379:6379

  web:
    build:
      context: .
      dockerfile: Dockerfile-dev
    depends_on:
      - db
      - redis
    restart: always
    environment:
      - DEBUG=1
      - FLASK_APP=application/wsgi
      - FLASK_ENV=development
      - FLASK_RUN_PORT=8000
    volumes:
      - ./application:/srv/application
    ports:
      - 8000:8000
    command: gunicorn --bind 0.0.0.0 -k gevent --workers 2 --preload application.wsgi:app --reload

  worker:
    build:
      context: .
      dockerfile: Dockerfile-dev
    depends_on:
      - db
      - redis
    restart: always
    environment:
      - DEBUG=1
      - SCRAPER_PAGES_LIMIT=100
      - FLASK_APP=application/web
      - FLASK_ENV=development
      - FLASK_RUN_PORT=8080
    volumes:
      - ./application:/srv/application
    command: celery -A application.wsgi.celery worker --loglevel=info --concurrency=1 -Q scraping

  monitor_remote:
      build:
        context: .
        dockerfile: Dockerfile-dev
      environment:
      - REDIS_HOST=redis://redis-cluster-v2-dev.3ymjnp.0001.use1.cache.amazonaws.com:6379/1
      command: celery flower -A application.wsgi.celery --port=5555 --broker=redis://redis-cluster-v2-dev.3ymjnp.0001.use1.cache.amazonaws.com:6379/1
      ports:
      - "5555:5555"

